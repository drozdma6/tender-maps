services:
  scrapper:
    build: ./parser
    ports:
      - '8080:8080'
    depends_on:
      - procurements-db
    container_name: scrapper
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://public-procurements-db/postgres
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD}
      - SPRING_PROFILES_ACTIVE=prod,actuator

      - RUN_ON_STARTUP=true
      - SCHEDULING_CRON=0 0 0 1 * *
      - CORE_POOL_SIZE=5
      - PROFINIT_API_KEY=${PROFINIT_API_KEY}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY:-}
      - FIXER_API_KEY=${FIXER_API_KEY}

  procurements-db:
    image: postgres:14-alpine
    restart: always
    container_name: public-procurements-db
    volumes:
      - pg_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - '5432:5432'

  procurements-api:
    build: ./procurements_api
    ports:
      - '8081:8081'
    depends_on:
      - procurements-db
    container_name: procurements-api
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://public-procurements-db/postgres
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD}
      - SPRING_PROFILES_ACTIVE=prod

  frontend:
    build:
      context: ./tender-map-frontend
      dockerfile: Dockerfile
      args:
        - VITE_API_URL=${VITE_API_URL}
    ports:
      - '3000:3000'
    container_name: tender-map-frontend

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - '9090:9090'
    restart: unless-stopped
    volumes:
      - ./parser/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus

  grafana:
    image: grafana/grafana
    container_name: grafana
    depends_on:
      - prometheus
    ports:
      - '3001:3000'
    restart: unless-stopped
    volumes:
      - grafana-data:/var/lib/grafana
volumes:
  pg_data:
  grafana-data:
  prometheus-data:
